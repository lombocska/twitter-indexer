twitter:
  indexer:
    consumerKey: ${TWITTER_INDEXER_CONSUMER_KEY}
    consumerSecret: ${TWITTER_INDEXER_CONSUMER_SECRET}
    token: ${TWITTER_INDEXER_TOKEN}
    secret: ${TWITTER_INDEXER_SECRET}
    capacity: ${TWITTER_INDEXER_CAPACITY:10}
    # list of terms to poll from twitter (should be colon separated)
    terms: ${TWITTER_INDEXER_TERMS:coronavirus}
    scheduling:
      enabled: ${TWITTER_INDEXER_JOB_ENABLED:false}
      cron: ${TWITTER_INDEXER_JOB_CRON:0 * * * * *} # by default every minute
    shedlock:
      min-time-lock-should-kept: ${SHEDLOCK_MIN_TIME_LOCK_KEPT:PT10S}
      max-time-lock-should-kept: ${SHEDLOCK_MAX_TIME_LOCK_KEPT:PT30S}
    kafka:
      topic: twitter-domain-event


spring:
  application:
    name: twitter-indexer-producer
    version: '@version@'
  datasource:
    pool-prepared-statements: true
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:twitter-indexer}?useUnicode=true&characterEncoding=utf8
    username: ${DB_USERNAME:twitter-indexer}
    password: ${DB_PASSWORD:twitter-indexer}
  liquibase:
    change-log: classpath:db/liquibase-changelog.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      transaction-id-prefix: tx-${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      compression-type: snappy
      batch-size: 32768  #32 KB
      properties:
        linger.ms: 20
  elasticsearch:
    rest:
      uris: ${TWITTER_ELASTICSEARCH_HOSTS:localhost:9200}

management:
  metrics.export.graphite:
    host: ${GRAPHITE_HOST:localhost}
    port: ${GRAPHITE_PORT:2003}
    global-prefix: ${spring.application.name}
    protocol: PLAINTEXT
    step: 10s

server:
  port: ${SERVER_PORT:8080}
