version: '3.7'

services:

  postgres:
    image: postgres:12.1
    container_name: "twitter-indexer-postgres"
    environment:
      POSTGRES_USER: twitter-indexer
      POSTGRES_PASSWORD: twitter-indexer
      POSTGRES_DB: twitter-indexer
    ports:
      - "5433:5432"

  graphite-grafana:
    image: kamon/grafana_graphite:3.0
    container_name: graphite
    ports:
      - "81:80"
      - "2003:2003"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_MESSAGE_MAX_BYTES: 32768
      KAFKA_CREATE_TOPICS: "twitter-domain-event"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"

  elasticsearch:
    image: elasticsearch:7.6.1
    container_name: elasticsearch
    environment:
      discovery.type: "single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports: ["9200:9200"]

# elasticsearch 3-nodes clusteroutcommented because disc space is low
#  elasticsearch1:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
#    container_name: elasticsearch1
#    environment:
#      cluster.name: docker-cluster
#      node.name: elasticsearch1
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#      xpack.monitoring.collection.enabled: "true"
#      xpack.monitoring.exporters.remote.type: http
#      xpack.monitoring.exporters.remote.host: monitor
#      discovery.seed_hosts: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.routing.allocation.disk.threshold_enabled: "true"
#      cluster.routing.allocation.disk.watermark.flood_stage: 5gb
#      cluster.routing.allocation.disk.watermark.low: 30gb
#      cluster.routing.allocation.disk.watermark.high: 20gb
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
##    deploy:
##      resources:
##        limits:
##          memory:  50M
##          cpus: '0.50'
#    ports:
#      - "19200:9200"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://0.0.0.0:9200"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  elasticsearch2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
#    container_name: elasticsearch2
#    environment:
#      cluster.name: docker-cluster
#      node.name: elasticsearch1
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#      xpack.monitoring.collection.enabled: "true"
#      xpack.monitoring.exporters.remote.type: http
#      xpack.monitoring.exporters.remote.host: monitor
#      discovery.seed_hosts: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.routing.allocation.disk.threshold_enabled: "true"
#      cluster.routing.allocation.disk.watermark.flood_stage: 1gb
#      cluster.routing.allocation.disk.watermark.low: 2gb
#      cluster.routing.allocation.disk.watermark.high: 1gb
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
##    mem_limit: 1000000000
#    ports:
#      - "29200:9200"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://0.0.0.0:9200"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  elasticsearch3:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
#    container_name: elasticsearch3
#    environment:
#      cluster.name: docker-cluster
#      node.name: elasticsearch1
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#      xpack.monitoring.collection.enabled: "true"
#      xpack.monitoring.exporters.remote.type: http
#      xpack.monitoring.exporters.remote.host: monitor
#      discovery.seed_hosts: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
#      cluster.routing.allocation.disk.threshold_enabled: "true"
#      cluster.routing.allocation.disk.watermark.flood_stage: 5gb
#      cluster.routing.allocation.disk.watermark.low: 30gb
#      cluster.routing.allocation.disk.watermark.high: 20gb
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
##    mem_limit: 1000000000
#    ports:
#      - "39200:9200"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://0.0.0.0:9200"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#
#  monitor:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
#    container_name: monitor
#    environment:
#      cluster.name: docker-monitor-cluster
#      node.name: monitor
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#      xpack.monitoring.enabled: "false"
#      xpack.monitoring.collection.enabled: "true"
#      discovery.seed_hosts: "monitor"
#      cluster.initial_master_nodes: "monitor"
#      cluster.routing.allocation.disk.threshold_enabled: "true"
#      cluster.routing.allocation.disk.watermark.flood_stage: 5gb
#      cluster.routing.allocation.disk.watermark.low: 30gb
#      cluster.routing.allocation.disk.watermark.high: 20gb
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
##    mem_limit: 1000000000
#    ports:
#      - "9200:9200"
#
#  kibana-devtools:
#    image: docker.elastic.co/kibana/kibana:7.6.1
#    container_name: kibana-devtools
#    environment:
#      ELASTICSEARCH_HOSTS: http://elasticsearch3:9200
#    ports:
#      - "15601:5601"
#
#  kibana-dashboard:
#    image: docker.elastic.co/kibana/kibana:7.6.1
#    container_name: kibana-dashboard
#    environment:
#      ELASTICSEARCH_HOSTS: http://monitor:9200
#    ports:
#      - "25601:5601"


